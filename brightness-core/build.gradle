import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE"
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'mysql:mysql-connector-java:5.1.36'
        classpath 'org.mongodb:mongo-java-driver:3.2.2'
        classpath 'org.mongodb:mongodb-driver:3.2.2'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'

sourceCompatibility = 1.8
version = '1.0'

project.ext {
    environment = 'local'
}
loadConfiguration()

repositories {
    mavenCentral()
}

bootRepackage {
    mainClass = 'com.hna.brightness.BrightnessApp'
}

springBoot {
    mainClass = 'com.hna.brightness.BrightnessApp'
    executable = true
}

bootRun {
    addResources = true
}

group = 'com.hna.brightness'

configurations {
    providedRuntime
}

compileJava.dependsOn(processResources)

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zuul', version: '1.1.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-redis', version: '1.3.5.RELEASE'
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '1.7.1.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-keyvalue', version: '1.1.1.RELEASE'
//    compile group: 'org.springframework.data', name: 'spring-data-elasticsearch', version: '2.0.1.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.1.0.RELEASE'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.0.1'

    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.2.2'
    compile group: 'org.mongodb', name: 'mongodb-driver', version: '3.2.2'


    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.36'

    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.24-incubating'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.7.0'
    compile group: 'org.jxls', name: 'jxls', version: '2.3.0'
    compile group: 'org.jxls', name: 'jxls-poi', version: '1.0.9'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.3.5.RELEASE'

    compile project(':brightness-data-service')
}


task stage(dependsOn: 'bootRepackage') {
}

processResources {
    include '*.xml'
    include "application.properties"
    include "text_blacklist.properties"
    include "privilege.csv"
    include "application-${project.ext.environment}.properties"
    include 'db/migration/**'
    include 'word_template/*.ftl'

    filesMatching("**/application.properties") {
        filter(ReplaceTokens, tokens: [
                'profile': "${project.ext.environment}".toString(),
        ])
    }
}

war.dependsOn 'processResources'

task local << {
    bootRun.systemProperty 'spring.profiles.active', 'local'
}

flyway {
    url = "$config.db.url"
    user = "$config.db.user"
    password = "$config.db.password"
    schemas = ["$config.db.schemas"]
}

task initDB(type: Exec) {
    commandLine 'sh', '-c', "mysql -h ${config.db.host} -u${config.db.user} -p${config.db.password} < src/main/resources/db/initialize/init_db.sql"
}

task initDefaultData(type: Exec) {
    commandLine 'sh', '-c', "mysql -h ${config.db.host} -u${config.db.user} -p${config.db.password} ${config.db.schemas} < src/main/resources/db/initialize/initialize.sql"
}

flywayMigrate.dependsOn 'initDB'

def loadConfiguration() {
    def environment = hasProperty('env') ? env : 'local'
    project.ext.environment = environment

    def configFile = file('config.groovy')
    def config = new ConfigSlurper(environment).parse(configFile.toURI().toURL())
    if (hasProperty('dbPassword')) {
        config.db.password = project.dbPassword
    } else if (System.getenv('DATABASEPASS')) {
        config.db.password = System.getenv('DATABASEPASS')
    }

    config.db.host = "$System.env.DATABASEURL"
    config.db.url = "jdbc:mysql://$System.env.DATABASEURL:3306"

    project.ext.config = config
}
